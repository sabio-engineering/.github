name: Maven Build

#Set the env's to match your projects build requirements
#DOCKER_IMAGE_NAME is the name you have configured in your app pom.xml
env:
  JAVA_VERSION: '11'
  JAVA_DISTRIBUTION: 'adopt'
  DOCKER_BUILD: true
  DOCKER_IMAGE_NAME: com.sabiogroup.ivrpulse/ivrpulse


on:
  push:
    tags:
      - '*'
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

jobs:
  build-test:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Maven Config
        uses: whelk-io/maven-settings-xml-action@v14
        with:
          repositories: '[{ "id": "github-packages", "url": "https://maven.pkg.github.com/sabio-engineering/*" }]'
          servers: '[{ "id": "github-packages", "username": "read-only-access", "password": "${{ secrets.PACKAGE_ACCESS_TOKEN }}" }, { "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN }}"}]'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build & Test
        run: mvn -B test --file pom.xml
      
  archive-maven:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v14
        with:
          repositories: '[{ "id": "github-packages", "url": "https://maven.pkg.github.com/sabio-engineering/*" }]'
          servers: '[{ "id": "github-packages", "username": "read-only-access", "password": "${{ secrets.PACKAGE_ACCESS_TOKEN }}" }, { "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN }}"}]'

      - name: Publish to GitHub Packages 
        run: mvn -B deploy -DskipTests

  archive-docker:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        if: env.DOCKER_BUILD
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Setup Maven Config
        uses: whelk-io/maven-settings-xml-action@v14
        if: env.DOCKER_BUILD
        with:
          repositories: '[{ "id": "github-packages", "url": "https://maven.pkg.github.com/sabio-engineering/*" }]'
          servers: '[{ "id": "github-packages", "username": "read-only-access", "password": "${{ secrets.PACKAGE_ACCESS_TOKEN }}" }, { "id": "github", "username": "${{ github.actor }}", "password": "${{ secrets.GITHUB_TOKEN }}"}]'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Package for deploy
        run: mvn -B package -DskipTests

      - name: Build Docker with Maven
        if: env.DOCKER_BUILD
        run: mvn docker:build -P docker
        
      - name: Log into registry
        if: env.DOCKER_BUILD
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        
      - name: Push image
        if: env.DOCKER_BUILD
        run: |
          PROJECT_NAME=$(echo ${{ github.repository }} | sed 's/sabio-engineering\///')
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$PROJECT_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker image ls | grep $DOCKER_IMAGE_NAME | awk '{print $2}' | xargs -I{} docker tag $DOCKER_IMAGE_NAME $IMAGE_ID:{} 

          docker image push --all-tags $IMAGE_ID
